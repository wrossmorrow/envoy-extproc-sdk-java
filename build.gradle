plugins {
  id 'java'
  id 'application'
  id 'com.google.protobuf' version '0.9.1'
  id 'idea'
  id "com.diffplug.spotless" version "6.20.0"
  id 'maven-publish'
}

group 'com.github.wrossmorrow'
version '0.1.3'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  maven { url "https://maven-central.storage-download.googleapis.com/maven2/" }
  maven { url 'https://buf.build/gen/maven' }
  mavenCentral()
  mavenLocal()
}

<<<<<<< Updated upstream
=======
group 'com.github.wrossmorrow'
version '0.1.3'

>>>>>>> Stashed changes
def googleJavaFormatVersion = 'v1.17.0'
def grpcVersion = '1.57.2'
def protobufVersion = '3.22.3'
def protocVersion = protobufVersion

dependencies {

  // implementation 'com.google.guava:guava:31.1-jre'

  implementation "io.grpc:grpc-protobuf:${grpcVersion}"
  implementation "io.grpc:grpc-services:${grpcVersion}"
  implementation "io.grpc:grpc-stub:${grpcVersion}"
  compileOnly "org.apache.tomcat:annotations-api:6.0.53"

  implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

  implementation 'build.buf.gen:envoyproxy_envoy_grpc_java:1.57.2.1.20230817201313.e75e636e2bd4'
  implementation 'build.buf.gen:envoyproxy_envoy_protocolbuffers_java:24.0.0.1.20230817201313.e75e636e2bd4'
  implementation 'build.buf.gen:envoyproxy_envoy_bufbuild_validate-java:1.0.2.1.20230817201313.e75e636e2bd4'

  runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
  
  testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
  testImplementation "io.grpc:grpc-testing:${grpcVersion}"
  testImplementation "junit:junit:4.13.2"
  testImplementation "org.mockito:mockito-core:3.4.0"

}

application {
  mainClassName = "com.github.wrossmorrow.extproc.ExternalProcessorServer"
}

spotless {
  java {
    target fileTree('.') {
      include '**/*.java'
      exclude '**/build/**', '**/build-*/**'
    }
    importOrder()
    removeUnusedImports()
    trimTrailingWhitespace()
    endWithNewline()
    googleJavaFormat()
  }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
  useJUnit()
  useJUnitPlatform()

  testLogging.showStandardStreams = true

  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  failFast = true

  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}

tasks.withType(Zip) {
   duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
  manifest {
    attributes(
      'Main-Class': mainClassName
    )
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = group
      artifactId = 'extproc'
      version = version

      from components.java

      pom {
        name = 'Envoy ExternalProcessor SDK'
        description = 'An SDK for building ExternalProcessors for Envoy'
        url = 'https://github.com/wrossmorrow/envoy-extproc-sdk-java'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'wrossmorrow'
            name = 'W. Ross Morrow'
            email = 'morrowwr@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/wrossmorrow/envoy-extproc-sdk-java.git'
          developerConnection = 'scm:git:ssh://github.com/wrossmorrow/envoy-extproc-sdk-java.git'
          url = 'https://github.com/wrossmorrow/envoy-extproc-sdk-java'
        }
      }
    }
  }

  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/wrossmorrow/envoy-extproc-sdk-java"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }

}
